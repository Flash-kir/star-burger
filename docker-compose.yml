version: "3.2"

services:
  db:
    image: postgres:12.0-alpine
    container_name: 'db'
    volumes:
      - /var/lib/postgresql/12/main:/star-burger/db
    #      - type: bind
    #        source: /var/lib/postgresql/12/main
    #        target: /var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB-postgres}
      POSTGRES_USER: ${POSTGRES_USER-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-password}
      PGDATA: /star-burger/db
    ports:
      - "5432:5432"
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: 'star-burger-frontend'
    command: ./node_modules/.bin/parcel watch bundles-src/index.js --dist-dir bundles --public-url="./"
    volumes:
      - ./assets:/star-burger/assets
      - ./bundles:/star-burger/bundles
      - ./bundles-src:/star-burger/bundles-src
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: 'star-burger-backend'
    command: >
        bash -c "python manage.py collectstatic --noinput
        && gunicorn -w 3 -b 0.0.0.0:8000 star_burger.wsgi:application"
    volumes:
      - ./staticfiles:/star-burger/staticfiles
      - ./assets:/star-burger/assets
      - ./bundles:/star-burger/bundles
    ports:  
      - "127.0.0.1:8000:8000"
    depends_on:
      - frontend
      - db
